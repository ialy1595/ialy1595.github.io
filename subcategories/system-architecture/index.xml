<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System Architecture on ialy&#39;s blog</title>
    <link>https://ialy1595.github.io/subcategories/system-architecture/</link>
    <description>Recent content in System Architecture on ialy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>ialy12006@gmail.com (ialy1595)</managingEditor>
    <webMaster>ialy12006@gmail.com (ialy1595)</webMaster>
    <lastBuildDate>Thu, 21 Mar 2019 17:12:20 +0900</lastBuildDate>
    
	<atom:link href="https://ialy1595.github.io/subcategories/system-architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Datapath and Control Unit</title>
      <link>https://ialy1595.github.io/post/datapath-and-control-unit/</link>
      <pubDate>Thu, 21 Mar 2019 17:12:20 +0900</pubDate>
      <author>ialy12006@gmail.com (ialy1595)</author>
      <guid>https://ialy1595.github.io/post/datapath-and-control-unit/</guid>
      <description>Datapath Datapath는 CPU에서 직접적으로 연산이 이루어지는 부분이다. 따라서 연산을 하거나 연산된 결과를 저장할 register file과 연산이 실행되는 ALU로 이루어져 있다. 그리고 memory와 데이터를 주고받아야하기 때문에 memory와도 연결되었다. 그리고 이 데이터들은 버스에 담겨서 각각 부분으로 들어간다.</description>
    </item>
    
    <item>
      <title>Sequential Logic</title>
      <link>https://ialy1595.github.io/post/sequential-logic/</link>
      <pubDate>Sun, 03 Feb 2019 19:53:09 +0900</pubDate>
      <author>ialy12006@gmail.com (ialy1595)</author>
      <guid>https://ialy1595.github.io/post/sequential-logic/</guid>
      <description>Sequential logic이란 같은 input이 들어왔다고 해도 logic의 state나 memory에 따라 결과가 달라지는 logic을 의미한다. 이러한 sequential logic이 존재할 수 있는 중요한 요소 중 하나는 gate가 이상적이지 않아서 delay가 존재한다는 것이다.</description>
    </item>
    
    <item>
      <title>Combinational Logic</title>
      <link>https://ialy1595.github.io/post/combinational-logic/</link>
      <pubDate>Wed, 26 Sep 2018 18:27:42 +0900</pubDate>
      <author>ialy12006@gmail.com (ialy1595)</author>
      <guid>https://ialy1595.github.io/post/combinational-logic/</guid>
      <description>Combinational Logic에서는 이전에 basic logic gate를 다루면서 만들었던 재료인 NOT, AND, OR, NAND, NOR을 가지고 요리를 해볼 것이다. 하지만 그 전에 Combinational Logic과 Sequential Logic의 차이 대해 먼저 알아보자.</description>
    </item>
    
    <item>
      <title>Trangister and Basic Logic Gate</title>
      <link>https://ialy1595.github.io/post/trangister-and-basic-logic-gate/</link>
      <pubDate>Tue, 31 Jul 2018 02:13:42 +0900</pubDate>
      <author>ialy12006@gmail.com (ialy1595)</author>
      <guid>https://ialy1595.github.io/post/trangister-and-basic-logic-gate/</guid>
      <description>컴퓨터공학부에 입학하고 처음으로 들은 전공 관련 수업이 컴퓨터 개론 및 실습이었는데, 코딩을 배울 것이라고 생각했던 것과 달리 갑자기 반도체와 트랜지스터가 나와서 멘붕했던 내용이다. 그 당시에는 전기과도 아닌데 이런 것을 왜하나 생각을 했지만 배우고 나서 뒤의 흐름을 익히니 기초부터 하나씩 쌓아올려 나가려는 큰 그림이었음을 깨달았다.</description>
    </item>
    
  </channel>
</rss>